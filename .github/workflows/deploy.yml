name: Upload Python Package
##############################################
# Create A Release to trigger a build       ##
# make sure your tag is Maj.Min.Build form  ##
##############################################
on:
  release:
    types: # This configuration does not affect the page_build event above
      - created
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Identifier'
        required: true
        default: 'a0.0.0v'
jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.release.target_commitish }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      id: ident
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install . -v # install our package
        if [[ "${{ github.event.inputs.version }}" == "" ]]; then
          echo "DEPLOY VIA RELEASES!"
          echo "::set-output name=VERSION:${GITHUB_REF##*/}"
          echo "::set-output name=IS_RELEASE:true"
        else
          echo "DEPLOY VIA TEST BUTTON"
          echo "::set-output name=VERSION:${GITHUB_REF##*/}"
          echo "::set-output name=IS_TEST:true"
        fi
    - name: Update Version
      run: |
        TAG=${{ steps.ident.outputs.VERSION }}
        rel-easy setver --version $TAG --sha1

    - name: FAKE Build and publish
      if: ${{ steps.ident.outputs.IS_TEST   }}
      run: |
        echo "SKIP DEPLOY STEP SINCE WE ARE JUST FAKING IT"
        echo "::error :DEPLOY STEP SKIPPED, since this was manually triggered"

    - name: Build and publish
      if: ${{ steps.ident.outputs.IS_RELEASE   }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cat releasy/version.py
        if ! [[ "${{ github.event.inputs.version }}" == "" ]]; then
          echo "TRIGGERED FROM BUTTON, only build tar, do not deploy"
          rel-easy publish --build-only

        else
          echo "TRIGGERED FROM RELEASE PUBLISH TO PYPI"
          rel-easy publish
        fi
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: |
          dist
    - name: Commit Version File
      run: |    # this will push the change back up to git
        if: ${{ steps.ident.outputs.IS_RELEASE   }}
        git config --global user.email "releasy@email.com"
        git config --global user.name "AutoDeploy Script"
        git add releasy/version.py
        git commit -m "Updated Verion to ${{ github.event.release.tag_name }} And Released build to PyPi"
        git push
    - name: Cleanup
      # run any cleanup needed
      run: |
        echo "All Done..."


